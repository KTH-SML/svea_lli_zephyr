&cdc_acm_uart0 {
    current-speed = <115200>;
};

&usart1 {
    current-speed = <115200>;
};

&i2c2 {
    status = "okay";
    clock-frequency = <I2C_BITRATE_FAST>;
    ism330dlc: ism330dlc@6b {
        status = "okay";
        compatible = "st,ism330dlc";
        drdy-gpios = <&mb1 15 GPIO_ACTIVE_HIGH>,
                     <&mb1  1 GPIO_ACTIVE_HIGH>;
        accel-odr = <8>;
        gyro-odr = <8>;
        accel-range = <2>;
        gyro-range = <125>;
        reg = <0x6b>;
    };
};

&iwdg {
    status = "okay";
};

/ {
    chosen {
        zephyr,console = &usart3;
        zephyr,shell-uart = &usart3;
    };

    aliases {
        /* PWM capture inputs (RC receiver) - silkscreen label in comments */
        rc-steer    = &pwm3_in;   // MISO1
        rc-high-gear     = &pwm9_in;   // TX1 (silkscreen), TX2 (datasheet)
        rc-throttle = &pwm5_in;   // P5
        rc-override = &pwm4_in;   // SCL1

        /* PWM outputs (servos/ESC) - silkscreen label in comments */
        servo0 = &steeringservo;  // P1
        servo1 = &gearservo;      // P3
        servo2 = &throttleesc;    // P4
        servo3 = &diffservo;      // P2
        servo4 = &diffservorear;  // PA5, TIM2_CH1, SCK1

        watchdog0 = &iwdg;
    };
};

#include <zephyr/dt-bindings/pwm/pwm.h>

/* Pinmux definitions - silkscreen label in comments */
&pinctrl {
    tim1_ch1_pe9: tim1_ch1_pe9    { pinmux = <STM32_PINMUX('E', 9, AF1)>;  }; // P1
    tim2_ch3_pb10: tim2_ch3_pb10   { pinmux = <STM32_PINMUX('B', 10, AF1)>; }; // P2
    tim2_ch4_pb11: tim2_ch4_pb11   { pinmux = <STM32_PINMUX('B', 11, AF1)>; }; // P3
    tim12_ch1_ph6: tim12_ch1_ph6   { pinmux = <STM32_PINMUX('H', 6, AF9)>;  }; // P4
    tim3_ch1_pa6: tim3_ch1_pa6    { pinmux = <STM32_PINMUX('A', 6, AF2)>;  }; // MISO1
    tim3_ch2_pa7: tim3_ch2_pa7    { pinmux = <STM32_PINMUX('A', 7, AF2)>;  };
    tim4_ch3_pb8: tim4_ch3_pb8    { pinmux = <STM32_PINMUX('B', 8, AF2)>;  }; // SCL1
    tim4_ch4_pb9: tim4_ch4_pb9    { pinmux = <STM32_PINMUX('B', 9, AF2)>;  };
    tim5_ch1_ph10: tim5_ch1_ph10   { pinmux = <STM32_PINMUX('H', 10, AF2)>; }; // P5
    tim15_ch1_pe4: tim15_ch1_pe4   { pinmux = <STM32_PINMUX('E', 4,  AF2)>; };
    tim9_ch1_pa2: tim9_ch1_pa2    { pinmux = <STM32_PINMUX('A', 2, AF3)>;  }; // TX1 (silkscreen), TX2 (datasheet)
    tim11_ch1_pb9: tim11_ch1_pb9   { pinmux = <STM32_PINMUX('B', 9, AF1)>;  }; // SDA1
    tim2_ch1_pa5: tim2_ch1_pa5 { pinmux = <STM32_PINMUX('A', 5, AF1)>; }; // P11 (PA5, TIM2_CH1, SCK1)
};

/* PWM Output timers - silkscreen label in comments */
&timers1 {
    status = "okay";
    st,prescaler = <1079>;
    pwm1: pwm1 {
        compatible = "st,stm32-pwm";
        status = "okay";
        #pwm-cells = <3>;
        pinctrl-0 = <&tim1_ch1_pe9>; // P1
        pinctrl-names = "default";
    };
};

&timers2 {
    status = "okay";
    st,prescaler = <1079>;
    pwm2: pwm2 {
        compatible = "st,stm32-pwm";
        status = "okay";
        #pwm-cells = <3>;
        pinctrl-0 = <&tim2_ch3_pb10 &tim2_ch4_pb11 &tim2_ch1_pa5>; // P2, P3, P11
        pinctrl-names = "default";
    };
};

&timers12 {
    status = "okay";
    st,prescaler = <1079>;
    pwm12: pwm12 {
        compatible = "st,stm32-pwm";
        status = "okay";
        #pwm-cells = <3>;
        pinctrl-0 = <&tim12_ch1_ph6>; // P4
        pinctrl-names = "default";
    };
};

&timers11 {
    status = "okay";
    st,prescaler = <1079>;
    pwm11: pwm11 {
        compatible = "st,stm32-pwm";
        status = "okay";
        #pwm-cells = <3>;
        pinctrl-0 = <&tim11_ch1_pb9>; // SDA1
        pinctrl-names = "default";
    };
};

/* PWM Input capture timers - silkscreen label in comments */
&timers3 {
    status = "okay";
    st,prescaler = <107>;
    pwm3_in: pwm_in {
        compatible = "st,stm32-pwm";
        status = "okay";
        #pwm-cells = <3>;
        pinctrl-0 = <&tim3_ch1_pa6>; // MISO1
        pinctrl-names = "default";
    };
};

&timers4 {
    status = "okay";
    st,prescaler = <107>;
    pwm4_in: pwm4_in {
        four-channel-capture-support;
        compatible = "st,stm32-pwm";
        status = "okay";
        #pwm-cells = <3>;
        pinctrl-0 = <&tim4_ch3_pb8>; // SCL1
        pinctrl-names = "default";
    };
};

&timers9 {
    status = "okay";
    st,prescaler = <207>;
    pwm9_in: pwm9_in {
        compatible = "st,stm32-pwm";
        status = "okay";
        #pwm-cells = <3>;
        pinctrl-0 = <&tim9_ch1_pa2>; // TX1 (silkscreen), TX2 (datasheet)
        pinctrl-names = "default";
    };
};

&timers5 {
    status = "okay";
    st,prescaler = <107>;
    pwm5_in: pwm5_in {
        compatible = "st,stm32-pwm";
        status = "okay";
        #pwm-cells = <3>;
        pinctrl-0 = <&tim5_ch1_ph10>; // P5
        pinctrl-names = "default";
    };
};

/ {
    // Servo output nodes - silkscreen label in comments
    steeringservo: servo {
        compatible = "pwm-servo";
        pwms = <&pwm1 1 PWM_MSEC(10) PWM_POLARITY_NORMAL>; // P1
        min-pulse = <PWM_USEC(1000)>;
        max-pulse = <PWM_USEC(2100)>;
    };
    gearservo: gear_servo {
        compatible = "pwm-servo";
        pwms = <&pwm2 4 PWM_MSEC(10) PWM_POLARITY_NORMAL>; // P3
        min-pulse = <PWM_USEC(1000)>;
        max-pulse = <PWM_USEC(2100)>;
    };
    throttleesc: throttle_esc {
        compatible = "pwm-servo";
        pwms = <&pwm12 1 PWM_MSEC(10) PWM_POLARITY_NORMAL>; // P4
        min-pulse = <PWM_USEC(1000)>;
        max-pulse = <PWM_USEC(2100)>;
    };
    diffservo: diff_servo {
        compatible = "pwm-servo";
        pwms = <&pwm2 3 PWM_MSEC(10) PWM_POLARITY_NORMAL>; // P2
        min-pulse = <PWM_USEC(1000)>;
        max-pulse = <PWM_USEC(2100)>;
    };
    diffservorear: diff_servo_rear {
        compatible = "pwm-servo";
        pwms = <&pwm2 1 PWM_MSEC(10) PWM_POLARITY_NORMAL>; // P11 (PA5, TIM2_CH1, SCK1)
        min-pulse = <PWM_USEC(1000)>;
        max-pulse = <PWM_USEC(2100)>;
    };
};

